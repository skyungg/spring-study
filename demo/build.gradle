plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id "jacoco"
	id 'com.diffplug.spotless' version '6.16.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//spring doc
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.assertj:assertj-core'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.8"
}

spotless {
	java {
		target("**/*.java")
		targetExclude("**/SecurityConfig.java", "**/SwaggerConfiguration.java", "**/generated/**")
		googleJavaFormat().aosp()
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}
